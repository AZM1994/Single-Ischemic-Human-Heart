permutation_mut_mat_all <- c()
for (O2_batch in seq(1 : 10)){
permutation_mut_mat_batch <- readRDS(paste0(O2_results_dir, "/1000_perms_", group_num, "G_run_", O2_batch, "/permutation_mut_mat_all_by_case_decile.rds"))
permutation_mut_mat_all <- rbind(permutation_mut_mat_all, permutation_mut_mat_batch)
}
# saveRDS(mutation_mut_mat_all, paste0(fig_save_dir, "/mutation_mut_mat_all_by_case_decile.rds"))
# saveRDS(permutation_mut_mat_all, paste0(fig_save_dir, "/permutation_mut_mat_all_by_case_decile.rds"))
# write.csv(mutation_mut_mat_all[, 1:96], paste0(fig_save_dir, "mutation_mut_mat_all_by_case_decile.csv"))
# write.csv(permutation_mut_mat_all[, 1:96], paste0(fig_save_dir, "permutation_mut_mat_all_by_case_decile.csv"))
# ### replace all 0s in permutation results by 1
# mutation_mut_mat_all_modified <- mutation_mut_mat_all[, 1:96]
# zero_sum_rows_mut <- rowSums(mutation_mut_mat_all_modified) == 0
# mutation_mut_mat_all_modified[zero_sum_rows_mut, ] <- 1
#
# permutation_mut_mat_all_modified <- permutation_mut_mat_all[, 1:96]
# zero_sum_rows_permut <- rowSums(permutation_mut_mat_all_modified) == 0
# permutation_mut_mat_all_modified[zero_sum_rows_permut, ] <- 1
# write.csv(mutation_mut_mat_all_modified, paste0(fig_save_dir, "mutation_mut_mat_all_modified.csv"))
# write.csv(permutation_mut_mat_all_modified, paste0(fig_save_dir, "permutation_mut_mat_all_modified.csv"))
## normalize mut_mat to eat snv.burden (per individual)
mutation_avg_snv_burden_by_individual <- Hypoxia_PTA_Cases_metadata %>%
# filter(Cell_ID != "1743_F3") %>%
group_by(Case_ID) %>% summarise(across(where(is.numeric), mean, na.rm = TRUE)) %>%
arrange(match(Case_ID, Hypoxia_PTA_Cases_metadata_collapsed$Case_ID)) %>% mutate(Condition = Hypoxia_PTA_Cases_metadata_collapsed$Condition)
## calculate burden for each individual and decile
mutation_mut_mat_all_burden_decile <- mutation_mut_mat_all %>%
rowwise() %>% mutate(row_sum_decile = sum(c_across(1:96))) %>%
ungroup() %>% group_by(Case_ID) %>%
mutate(percentage_decile = row_sum_decile / sum(row_sum_decile) * 100) %>% ungroup() %>%
mutate(burden_individual = rep(mutation_avg_snv_burden_by_individual$snv.burden, each = group_num)) %>%
mutate(burden_decile = percentage_decile * rep(mutation_avg_snv_burden_by_individual$snv.burden, each = group_num) / 100)
# snv.burden_normal <- as.matrix(mutation_avg_snv_burden_by_individual$snv.burden[mutation_avg_snv_burden_by_individual$Condition == "Normal"])
# snv.burden_disease <- as.matrix(mutation_avg_snv_burden_by_individual$snv.burden[mutation_avg_snv_burden_by_individual$Condition == "Disease"])
# permutation_avg_snv_burden_by_individual <- rbind(as.matrix(rep(rep(snv.burden_normal, each = group_num), permutation_round)),
#                                                   as.matrix(rep(rep(snv.burden_disease, each = group_num), permutation_round)))
snv.burden_normal <- as.matrix(mutation_mut_mat_all_burden_decile$burden_decile[mutation_mut_mat_all_burden_decile$condition == "Normal"])
snv.burden_disease <- as.matrix(mutation_mut_mat_all_burden_decile$burden_decile[mutation_mut_mat_all_burden_decile$condition == "Disease"])
permutation_avg_snv_burden_by_individual <- rbind(as.matrix(rep(snv.burden_normal, permutation_round)), as.matrix(rep(snv.burden_disease, permutation_round)))
# mutation_mut_mat_all_modified_est <- 1 / rowSums(mutation_mut_mat_all_modified) * mutation_mut_mat_all_modified *
#   rep(mutation_avg_snv_burden_by_individual$snv.burden, each = group_num)
mutation_mut_mat_all_modified_est <- 1 / rowSums(mutation_mut_mat_all[, 1:96]) * mutation_mut_mat_all[, 1:96] * mutation_mut_mat_all_burden_decile$burden_decile
permutation_mut_mat_all_modified_est <- 1 / rowSums(permutation_mut_mat_all[, 1:96]) * permutation_mut_mat_all[, 1:96] * permutation_avg_snv_burden_by_individual
### replace all 0s and NaNs in mutation and permutation results by 1
zero_sum_rows_mut <- rowSums(mutation_mut_mat_all_modified_est) %in% c(0, NaN)
mutation_mut_mat_all_modified_est[zero_sum_rows_mut, ] <- 1
# permutation_mut_mat_all_modified <- permutation_mut_mat_all[, 1:96]
zero_sum_rows_permut <- rowSums(permutation_mut_mat_all_modified_est) %in% c(0, NaN)
permutation_mut_mat_all_modified_est[zero_sum_rows_permut, ] <- 1
write.csv(mutation_mut_mat_all_modified_est, paste0(fig_save_dir, "mutation_mut_mat_all_modified_est.csv"))
write.csv(permutation_mut_mat_all_modified_est, paste0(fig_save_dir, "permutation_mut_mat_all_modified_est.csv"))
##### mutation mut_mat summary
mutation_mut_mat_summary <- mutation_mut_mat_all %>%
mutate(mut_sum = rowSums(select(., 1:96))) |> base::`[`(c("Case_ID", "mut_sum", "decile", "condition")) %>% group_by(Case_ID, decile) %>%
summarise(Value = mut_sum, .groups = "drop") %>% pivot_wider(names_from = decile, values_from = Value) %>%
mutate(mut_num_percase = rowSums(select(., 2:(2 + group_num - 1)))) %>%
arrange(match(Case_ID, Hypoxia_PTA_Cases_metadata$Case_ID)) %>%
mutate(Condition = Hypoxia_PTA_Cases_metadata_collapsed$Condition) %>%
mutate(Case_ID = Hypoxia_PTA_Cases_metadata_collapsed$Case_ID) %>%
mutate(Age = Hypoxia_PTA_Cases_metadata_collapsed$age)
mutation_mut_mat_summary_Normal <- mutation_mut_mat_summary[mutation_mut_mat_summary$Condition == "Normal", ] %>%
summarise(across(2:(2 + group_num), sum, .names = "{.col}")) %>% bind_rows(mutation_mut_mat_summary[mutation_mut_mat_summary$Condition == "Normal", ], .)
mutation_mut_mat_summary_IHD <- mutation_mut_mat_summary[mutation_mut_mat_summary$Condition == "Disease", ] %>%
summarise(across(2:(2 + group_num), sum, .names = "{.col}")) %>% bind_rows(mutation_mut_mat_summary[mutation_mut_mat_summary$Condition == "Disease", ], .)
# write.csv(mut_num_genic_merged, paste0(fig_save_dir, "mut_num_genic_merged.csv"))
# write.csv(mutation_mut_mat_summary_Normal, paste0(fig_save_dir, "mutation_mut_mat_summary_Normal.csv"))
# write.csv(mutation_mut_mat_summary_IHD, paste0(fig_save_dir, "mutation_mut_mat_summary_IHD.csv"))
# write.csv(mutation_mut_mat_summary, paste0(fig_save_dir, "mutation_mut_mat_summary.csv"))
##### permutation mut_mat summary
permutation_mut_mat_summary <- permutation_mut_mat_all %>%
mutate(mut_sum = rowSums(select(., 1:96))) |> base::`[`(c("Case_ID", "mut_sum", "decile", "condition", "perm.id_batch")) %>%
group_by(Case_ID, decile) %>% summarise(mut_sum = mean(mut_sum), .groups = "drop") %>%
group_by(Case_ID, decile) %>% summarise(Value = mut_sum, .groups = "drop") %>%
# reframe(Value = mut_sum) %>%
pivot_wider(names_from = decile, values_from = Value) %>%
mutate(mut_num_percase = rowSums(select(., 2:(2 + group_num - 1)))) %>%
arrange(match(Case_ID, Hypoxia_PTA_Cases_metadata$Case_ID)) %>%
mutate(Condition = Hypoxia_PTA_Cases_metadata_collapsed$Condition) %>%
mutate(Case_ID = Hypoxia_PTA_Cases_metadata_collapsed$Case_ID) %>%
mutate(Age = Hypoxia_PTA_Cases_metadata_collapsed$age)
permutation_mut_mat_summary_Normal <- permutation_mut_mat_summary[permutation_mut_mat_summary$Condition == "Normal", ] %>%
summarise(across(2:(2 + group_num), sum, .names = "{.col}")) %>% bind_rows(permutation_mut_mat_summary[permutation_mut_mat_summary$Condition == "Normal", ], .)
permutation_mut_mat_summary_IHD <- permutation_mut_mat_summary[permutation_mut_mat_summary$Condition == "Disease", ] %>%
summarise(across(2:(2 + group_num), sum, .names = "{.col}")) %>% bind_rows(permutation_mut_mat_summary[permutation_mut_mat_summary$Condition == "Disease", ], .)
# write.csv(permutation_mut_mat_summary_Normal, paste0(fig_save_dir, "permutation_mut_mat_summary_Normal.csv"))
# write.csv(permutation_mut_mat_summary_IHD, paste0(fig_save_dir, "permutation_mut_mat_summary_IHD.csv"))
# write.csv(permutation_mut_mat_summary, paste0(fig_save_dir, "permutation_mut_mat_summary.csv"))
##### plot
mutation_mut_mat_summary_plot0 <- mutation_mut_mat_all %>% mutate(mut_num = rowSums(select(., 1:96))) |> base::`[`(c("Case_ID", "mut_num", "decile", "condition"))
permutation_mut_mat_summary_plot0 <- permutation_mut_mat_all %>%
mutate(permut_sum = rowSums(select(., 1:96))) |> base::`[`(c("Case_ID", "permut_sum", "decile", "condition", "perm.id_batch")) %>%
group_by(Case_ID, decile) %>% summarise(permut_sum = mean(permut_sum))
merged_summary_plot <- merge(mutation_mut_mat_summary_plot0, permutation_mut_mat_summary_plot0) %>%
merge(Hypoxia_PTA_Cases_metadata_collapsed[, c("Case_ID", "age")]) %>%
# filter(age >= 0.5 & age <= 90) %>%
mutate(enrichment_ratio = mut_num / permut_sum) %>%
filter(!is.na(enrichment_ratio) & is.finite(enrichment_ratio)) %>%
# filter(enrichment_ratio != 0) %>%
# filter(!is.na(enrichment_ratio)) %>%
# mutate(enrichment_ratio = ifelse(is.infinite(enrichment_ratio), NA, enrichment_ratio)) %>%
# mutate(enrichment_ratio = Winsorize(enrichment_ratio, probs = c(0.05, 0.95))) %>%
filter(enrichment_ratio >= quantile(enrichment_ratio, 0.25) - 1.5 * IQR(enrichment_ratio) &
enrichment_ratio <= quantile(enrichment_ratio, 0.75) + 1.5 * IQR(enrichment_ratio)) %>%
# filter(enrichment_ratio >= quantile(enrichment_ratio, 0.05) & enrichment_ratio <= quantile(enrichment_ratio, 0.95)) %>%
group_by(condition, decile) %>%
summarise(mean_ER = mean(enrichment_ratio, na.rm = TRUE),
sd_ER = sd(enrichment_ratio, na.rm = TRUE)) %>%
mutate(Condition = ifelse(condition == "Normal", "Control", ifelse(condition == "Disease", "IHD", "Unknown"))) %>%
mutate(Condition = factor(Condition, level = c("Control", "IHD"))) %>%
mutate(decile = factor(decile, level = seq(1:group_num)))
p_enrichment_ATACseq_snv_filtered <- ggplot(merged_summary_plot, aes(x = decile, y = mean_ER, group = Condition, color = Condition)) +
geom_hline(yintercept = 1, color = "black", linewidth = 0.6) + geom_line(position = position_dodge(width = 0.1), size = 1) +
geom_point(position = position_dodge(width = 0.1), size = 2) + stat_cor(size = 6, show.legend = FALSE) +
geom_errorbar(aes(ymin = mean_ER - sd_ER, ymax = mean_ER + sd_ER), width = 0.2, position = position_dodge(width = 0.1)) +
geom_smooth(data = merged_summary_plot, aes(x = decile, y = mean_ER, color = Condition, fill = Condition, group = Condition), method = "lm", se = TRUE, alpha = 0.2, linewidth = 1, linetype = "dashed") +
annotate(geom = "polygon", x = c(1, 8, 8), y = c(0.75, 0.75, 0.80), fill = "#2ca02c", alpha = 0.8) +
theme_linedraw() + scale_color_manual(values = color_set) + scale_fill_manual(values = color_set) +
theme(panel.background = element_rect(fill = "white"), panel.grid.major = element_line(color = "grey80", linetype = "dashed", size = 0.25), panel.grid.minor = element_blank(),
panel.border = element_rect(size = 0.5), text = element_text(size = 24), axis.title.x = element_text(hjust = 0.4, vjust = 0), axis.text.x = element_text(angle = 0, vjust = 0.0, hjust = 0.5)) +
ylim(c(0.75, 1.4)) + labs(x = "Chromosome accessibility levels", y = "sSNV enrichment ratio \n (obs/exp)", color = "Condition", title = "")
ggsave(paste0(fig_save_dir, "/enrichment_ATACseq_snv_filtered.pdf"), plot = p_enrichment_ATACseq_snv_filtered, width = 6, height = 3.5, dpi = 600)
ggsave(paste0(fig_save_dir, "/enrichment_ATACseq_snv_filtered.pdf"), plot = p_enrichment_ATACseq_snv_filtered, width = 7, height = 4, dpi = 600)
version
library(maftools)
library(psych)
library(ggplot2)
library(stringr)
library(dplyr)
library(tidyr)
setwd("/Users/zhemingan/Documents/BCH_research/Gene_Expression_Analysis")
##### read in metadata
Hypoxia_PTA_Cases_metadata <- readRDS("./data/SCAN2_df.rds") %>% as.data.frame() |>
base::`[`(c("cell_ID", "age", "gender", "Case_ID", "condition", "snv.burden", "snv.rate.per.gb")) %>%
rename_with(~ c("Cell_ID", "Condition"), .cols = c(1, 5))
Condition_list <- unique(Hypoxia_PTA_Cases_metadata$Condition)
selected_colnames <- c("Chr", "Start", "End", "Ref", "Alt", "Func.refGene", "Gene.refGene", "GeneDetail.refGene",
"ExonicFunc.refGene", "AAChange.refGene", "Cell_ID", "Case_ID", "Condition", "mut_type", "age")
genomic_SCAN2_df <- c()
for (condition_temp in Condition_list) {
for (mutation_type in c("ssnv", "sindel")) {
cat("Get genomic context for", condition_temp, mutation_type, "...\n")
heart_PTA_Cases_vcf_temp <- read.table(paste0("data/heart_PTA_Cases_annovar/heart_PTA_Cases.all_age.", condition_temp, "_", mutation_type, ".vcf"), sep = "\t") %>% mutate(V8 = sub(";.*", "", V8))
genomic_context_temp <- read.csv(paste0("data/heart_PTA_Cases_annovar/heart_PTA_Cases.all_age.", condition_temp, "_", mutation_type, ".csv"), header = TRUE) %>%
mutate(Cell_ID = heart_PTA_Cases_vcf_temp$V8) %>% mutate(Case_ID = str_extract(Cell_ID, "[^_]+")) %>%
mutate(Condition = condition_temp) %>% mutate(mut_type = mutation_type)
genomic_context_temp <- genomic_context_temp %>%
mutate(Cell_ID = ifelse(Cell_ID == "1864_M-E3-2n", "1864_E3", ifelse(Cell_ID == "4402_1_A1-2n", "4402_A1", ifelse(Cell_ID == "4402_1_A3-2n", "4402_A3",
ifelse(Cell_ID == "4638_1_A1-2n", "4638_A1", ifelse(Cell_ID == "4638_1_A4-2n", "4638_A4", ifelse(Cell_ID == "4638_1_B2-2n", "4638_B2",
ifelse(Cell_ID == "5657_M-D1-2n", "5657_D1", ifelse(Cell_ID == "5657_M-H1-2n", "5657_H1", ifelse(Cell_ID == "5828_CM_C2_2n", "5828_C2",
ifelse(Cell_ID == "5828_CM_G2_2n", "5828_G2", ifelse(Cell_ID == "5919_1_C4-2n", "5919_C4", ifelse(Cell_ID == "5919_1_D2-2n", "5919_D2",
ifelse(Cell_ID == "5919_1_E3-2n", "5919_E3", ifelse(Cell_ID == "5919_1_F6-2n", "5919_F6", ifelse(Cell_ID == "6032_1_A1-2n", "6032_A1",
ifelse(Cell_ID == "6032_M-C7-2n", "6032_C7", ifelse(Cell_ID == "6032_M-E7-2n", "6032_E7", ifelse(Cell_ID == "1673_CM_A2_2n", "1673_A2",
ifelse(Cell_ID == "1673_CM_A3_2n", "1673_A3", ifelse(Cell_ID == "1673_CM_D2_2n", "1673_D2", Cell_ID)))))))))))))))))))))
genomic_SCAN2_df_temp <- merge(genomic_context_temp, Hypoxia_PTA_Cases_metadata[c("Cell_ID", "Case_ID", "Condition", "age")]) |> base::`[`(selected_colnames) %>%
# filter(age >= 40 & age < 80) %>%
filter(Func.refGene %in% c("splicing", "exonic;splicing") | ExonicFunc.refGene %in% c("frameshift deletion", "frameshift insertion", "nonframeshift deletion", "nonsynonymous SNV", "stopgain"))
# filter(Func.refGene %in% c("intronic", "splicing", "exonic;splicing") |
#          ExonicFunc.refGene %in% c("frameshift deletion", "frameshift insertion", "nonframeshift deletion", "nonsynonymous SNV", "stopgain")) %>%
# filter(!grepl(";", Gene.refGene))
genomic_SCAN2_df <- rbind(genomic_SCAN2_df, genomic_SCAN2_df_temp)
}
}
# genomic_SCAN2_df <- genomic_SCAN2_df %>% filter(Gene.refGene %in% list_haha)
PTA_Cases_annovar_output <- write.table(genomic_SCAN2_df, paste0("data/MAFTools/PTA_Cases_annovar_output.txt"), sep = "\t", row.names = FALSE)
PTA_Cases_maf <- annovarToMaf(
annovar = paste0("data/MAFTools/PTA_Cases_annovar_output.txt"),
refBuild = "hg19",
# tsbCol = "Cell_ID",
tsbCol = "Case_ID",
table = "refGene",
MAFobj = T,
)
# Control_num <- 7
# IHD_num <- 15
# Control_num <- 3
# IHD_num <- 5
# Control_num <- 18
# IHD_num <- 15
Control_num <- 8
IHD_num <- 5
Control.maf <- subsetMaf(maf = PTA_Cases_maf, query = "Condition == 'Normal'", mafObj = TRUE)
Control.maf@summary$summary[3] <- Control_num
IHD.maf <- subsetMaf(maf = PTA_Cases_maf, query = "Condition == 'Disease'", mafObj = TRUE)
IHD.maf@summary$summary[3] <- IHD_num
my.color <- c("#FFDE17","#E21F26","#F57F20","#2179B4","#6B3F98","#009933","#66CBE4","#010101")
names(my.color) <- c("Missense_Mutation","Nonsense_Mutation","Splice_Site","Frame_Shift_Del","Frame_Shift_Ins","In_Frame_Del","In_Frame_Ins","Multi_Hit")
### select the gene list
hypoxia_gene_list <- read.csv("data/signet_sup/supplementary_table_5.csv", header = TRUE) %>%
pivot_longer(cols = everything(), names_to = "gene_set", values_to = "genes") %>% filter(!duplicated(genes))
hot_gene_list <- read.csv("data/MAFTools/hot_gene_list_heart_pta_02.csv", header = FALSE) %>% filter(!duplicated(V1))
all.genes <- names(sort(table(genomic_SCAN2_df$Gene.refGene), decreasing = TRUE))
top.genes <- names(sort(table(genomic_SCAN2_df$Gene.refGene), decreasing = TRUE))[1:200]
# list_haha <- intersect(genomic_SCAN2_df$Gene.refGene, a$V1)
# a<- as.data.frame(hot_gene_list)
# b <- as.data.frame(genomic_SCAN2_df$Gene.refGene)
# genomic_SCAN2_df[genomic_SCAN2_df$Gene.refGene == "LOC400684", ]
#
list_haha_2 <- intersect(genomic_SCAN2_df$Gene.refGene, hypoxia_gene_list$genes)
genomic_SCAN2_df_haha <- genomic_SCAN2_df %>% filter(Gene.refGene %in% list_haha_2)
# sort(table(genomic_SCAN2_df_haha$Gene.refGene), decreasing = T)
selected_gene_list <- list_haha_2
pdf("results/local_test/MAFTools/PTA_Cases.MAFTools.summary.pdf", width = 8, height = 5)
plotmafSummary(maf = Control.maf, rmOutlier = TRUE, addStat = 'median', dashboard = TRUE, titvRaw = FALSE)
plotmafSummary(maf = IHD.maf, rmOutlier = TRUE, addStat = 'median', dashboard = TRUE, titvRaw = FALSE)
dev.off()
pdf("results/local_test/MAFTools/PTA_Cases.MAFTools.oncoplot.pdf", width = 10, height = 25)
oncoplot(maf = Control.maf, genes = selected_gene_list, keepGeneOrder = F, colors = my.color)
oncoplot(maf = IHD.maf, genes = selected_gene_list, keepGeneOrder = F, colors = my.color)
dev.off()
# pdf("results/local_test/MAFTools/PTA_Cases.MAFTools.oncoplot.topgenes.pdf", width = 10, height = 35)
# oncoplot(maf = Control.maf, genes = top.genes, keepGeneOrder = F, colors = my.color)
# oncoplot(maf = IHD.maf, genes = top.genes, keepGeneOrder = F, colors = my.color)
# dev.off()
# pdf("results/local_test/MAFTools/PTA_Cases.MAFTools.oncoplot.hypoxiagenes.pdf", width = 10, height = 25)
# oncoplot(maf = Control.maf, genes = hypoxia_gene_list$Elvidge, keepGeneOrder = TRUE, colors = my.color)
# oncoplot(maf = IHD.maf, genes = hypoxia_gene_list$Elvidge, keepGeneOrder = TRUE, colors = my.color)
# dev.off()
# pdf("results/local_test/MAFTools/PTA_Cases.MAFTools.oncoplot.hotgenes.pdf", width = 10, height = 25)
# oncoplot(maf = Control.maf, genes = list_haha_2, keepGeneOrder = TRUE, colors = my.color)
# oncoplot(maf = IHD.maf, genes = list_haha_2, keepGeneOrder = TRUE, colors = my.color)
# dev.off()
# pdf("AD_panel.both.loose.MAFTools.2.pdf",width=8,height=5)
# for(i in top.genes)
# {
#   print(lollipopPlot2(m1=AD.maf,m2=control.maf,gene=i,m1_name="AD",m2_name="Control",AACol1="AAChange.refGene",AACol2="AAChange.refGene",colors=my.color,showDomainLabel=F))
#   print(lollipopPlot2(m1=AD.maf,m2=chip.maf,gene=i,m1_name="AD",m2_name="CHIP",AACol1="AAChange.refGene",AACol2="AAChange.refGene",colors=my.color,showDomainLabel=F))
# }
# dev.off()
#
View(hot_gene_list)
hypoxia_gene_list
hypoxia_gene_list$genes
hot_gene_list
list_haha_2 <- intersect(genomic_SCAN2_df$Gene.refGene, hot_gene_list)
list_haha_2
View(genomic_SCAN2_df)
library(maftools)
library(psych)
library(ggplot2)
library(stringr)
library(dplyr)
library(tidyr)
setwd("/Users/zhemingan/Documents/BCH_research/Gene_Expression_Analysis")
##### read in metadata
Hypoxia_PTA_Cases_metadata <- readRDS("./data/SCAN2_df.rds") %>% as.data.frame() |>
base::`[`(c("cell_ID", "age", "gender", "Case_ID", "condition", "snv.burden", "snv.rate.per.gb")) %>%
rename_with(~ c("Cell_ID", "Condition"), .cols = c(1, 5))
Condition_list <- unique(Hypoxia_PTA_Cases_metadata$Condition)
selected_colnames <- c("Chr", "Start", "End", "Ref", "Alt", "Func.refGene", "Gene.refGene", "GeneDetail.refGene",
"ExonicFunc.refGene", "AAChange.refGene", "Cell_ID", "Case_ID", "Condition", "mut_type", "age")
genomic_SCAN2_df <- c()
for (condition_temp in Condition_list) {
for (mutation_type in c("ssnv", "sindel")) {
cat("Get genomic context for", condition_temp, mutation_type, "...\n")
heart_PTA_Cases_vcf_temp <- read.table(paste0("data/heart_PTA_Cases_annovar/heart_PTA_Cases.all_age.", condition_temp, "_", mutation_type, ".vcf"), sep = "\t") %>% mutate(V8 = sub(";.*", "", V8))
genomic_context_temp <- read.csv(paste0("data/heart_PTA_Cases_annovar/heart_PTA_Cases.all_age.", condition_temp, "_", mutation_type, ".csv"), header = TRUE) %>%
mutate(Cell_ID = heart_PTA_Cases_vcf_temp$V8) %>% mutate(Case_ID = str_extract(Cell_ID, "[^_]+")) %>%
mutate(Condition = condition_temp) %>% mutate(mut_type = mutation_type)
genomic_context_temp <- genomic_context_temp %>%
mutate(Cell_ID = ifelse(Cell_ID == "1864_M-E3-2n", "1864_E3", ifelse(Cell_ID == "4402_1_A1-2n", "4402_A1", ifelse(Cell_ID == "4402_1_A3-2n", "4402_A3",
ifelse(Cell_ID == "4638_1_A1-2n", "4638_A1", ifelse(Cell_ID == "4638_1_A4-2n", "4638_A4", ifelse(Cell_ID == "4638_1_B2-2n", "4638_B2",
ifelse(Cell_ID == "5657_M-D1-2n", "5657_D1", ifelse(Cell_ID == "5657_M-H1-2n", "5657_H1", ifelse(Cell_ID == "5828_CM_C2_2n", "5828_C2",
ifelse(Cell_ID == "5828_CM_G2_2n", "5828_G2", ifelse(Cell_ID == "5919_1_C4-2n", "5919_C4", ifelse(Cell_ID == "5919_1_D2-2n", "5919_D2",
ifelse(Cell_ID == "5919_1_E3-2n", "5919_E3", ifelse(Cell_ID == "5919_1_F6-2n", "5919_F6", ifelse(Cell_ID == "6032_1_A1-2n", "6032_A1",
ifelse(Cell_ID == "6032_M-C7-2n", "6032_C7", ifelse(Cell_ID == "6032_M-E7-2n", "6032_E7", ifelse(Cell_ID == "1673_CM_A2_2n", "1673_A2",
ifelse(Cell_ID == "1673_CM_A3_2n", "1673_A3", ifelse(Cell_ID == "1673_CM_D2_2n", "1673_D2", Cell_ID)))))))))))))))))))))
genomic_SCAN2_df_temp <- merge(genomic_context_temp, Hypoxia_PTA_Cases_metadata[c("Cell_ID", "Case_ID", "Condition", "age")]) |> base::`[`(selected_colnames) %>%
filter(Func.refGene != "intergenic")
# filter(age >= 40 & age < 80) %>%
# filter(Func.refGene %in% c("splicing", "exonic;splicing") | ExonicFunc.refGene %in% c("frameshift deletion", "frameshift insertion", "nonframeshift deletion", "nonsynonymous SNV", "stopgain"))
# filter(Func.refGene %in% c("intronic", "splicing", "exonic;splicing") |
#          ExonicFunc.refGene %in% c("frameshift deletion", "frameshift insertion", "nonframeshift deletion", "nonsynonymous SNV", "stopgain")) %>%
# filter(!grepl(";", Gene.refGene))
genomic_SCAN2_df <- rbind(genomic_SCAN2_df, genomic_SCAN2_df_temp)
}
}
PTA_Cases_annovar_output <- write.table(genomic_SCAN2_df, paste0("data/MAFTools/PTA_Cases_annovar_output.txt"), sep = "\t", row.names = FALSE)
PTA_Cases_maf <- annovarToMaf(
annovar = paste0("data/MAFTools/PTA_Cases_annovar_output.txt"),
refBuild = "hg19",
# tsbCol = "Cell_ID",
tsbCol = "Case_ID",
table = "refGene",
MAFobj = T,
)
# Control_num <- 7
# IHD_num <- 15
# Control_num <- 3
# IHD_num <- 5
# Control_num <- 18
# IHD_num <- 15
Control_num <- 8
IHD_num <- 5
Control.maf <- subsetMaf(maf = PTA_Cases_maf, query = "Condition == 'Normal'", mafObj = TRUE)
Control.maf@summary$summary[3] <- Control_num
IHD.maf <- subsetMaf(maf = PTA_Cases_maf, query = "Condition == 'Disease'", mafObj = TRUE)
IHD.maf@summary$summary[3] <- IHD_num
my.color <- c("#FFDE17","#E21F26","#F57F20","#2179B4","#6B3F98","#009933","#66CBE4","#010101")
names(my.color) <- c("Missense_Mutation","Nonsense_Mutation","Splice_Site","Frame_Shift_Del","Frame_Shift_Ins","In_Frame_Del","In_Frame_Ins","Multi_Hit")
### select the gene list
hypoxia_gene_list <- read.csv("data/signet_sup/supplementary_table_5.csv", header = TRUE) %>%
pivot_longer(cols = everything(), names_to = "gene_set", values_to = "genes") %>% filter(!duplicated(genes))
hot_gene_list <- read.csv("data/MAFTools/hot_gene_list_heart_pta_02.csv", header = FALSE) %>% filter(!duplicated(V1))
all.genes <- names(sort(table(genomic_SCAN2_df$Gene.refGene), decreasing = TRUE))
top.genes <- names(sort(table(genomic_SCAN2_df$Gene.refGene), decreasing = TRUE))[1:200]
# list_haha <- intersect(genomic_SCAN2_df$Gene.refGene, a$V1)
# a<- as.data.frame(hot_gene_list)
# b <- as.data.frame(genomic_SCAN2_df$Gene.refGene)
# genomic_SCAN2_df[genomic_SCAN2_df$Gene.refGene == "LOC400684", ]
#
# list_haha_2 <- intersect(genomic_SCAN2_df$Gene.refGene, hypoxia_gene_list$genes)
list_haha_2 <- intersect(genomic_SCAN2_df$Gene.refGene, hot_gene_list)
genomic_SCAN2_df_haha <- genomic_SCAN2_df %>% filter(Gene.refGene %in% list_haha_2)
# sort(table(genomic_SCAN2_df_haha$Gene.refGene), decreasing = T)
selected_gene_list <- list_haha_2
pdf("results/local_test/MAFTools/PTA_Cases.MAFTools.summary.pdf", width = 8, height = 5)
plotmafSummary(maf = Control.maf, rmOutlier = TRUE, addStat = 'median', dashboard = TRUE, titvRaw = FALSE)
plotmafSummary(maf = IHD.maf, rmOutlier = TRUE, addStat = 'median', dashboard = TRUE, titvRaw = FALSE)
dev.off()
pdf("results/local_test/MAFTools/PTA_Cases.MAFTools.oncoplot.pdf", width = 10, height = 25)
oncoplot(maf = Control.maf, genes = selected_gene_list, keepGeneOrder = F, colors = my.color)
library(maftools)
library(psych)
library(ggplot2)
library(stringr)
library(dplyr)
library(tidyr)
setwd("/Users/zhemingan/Documents/BCH_research/Gene_Expression_Analysis")
##### read in metadata
Hypoxia_PTA_Cases_metadata <- readRDS("./data/SCAN2_df.rds") %>% as.data.frame() |>
base::`[`(c("cell_ID", "age", "gender", "Case_ID", "condition", "snv.burden", "snv.rate.per.gb")) %>%
rename_with(~ c("Cell_ID", "Condition"), .cols = c(1, 5))
Condition_list <- unique(Hypoxia_PTA_Cases_metadata$Condition)
selected_colnames <- c("Chr", "Start", "End", "Ref", "Alt", "Func.refGene", "Gene.refGene", "GeneDetail.refGene",
"ExonicFunc.refGene", "AAChange.refGene", "Cell_ID", "Case_ID", "Condition", "mut_type", "age")
genomic_SCAN2_df <- c()
for (condition_temp in Condition_list) {
for (mutation_type in c("ssnv", "sindel")) {
cat("Get genomic context for", condition_temp, mutation_type, "...\n")
heart_PTA_Cases_vcf_temp <- read.table(paste0("data/heart_PTA_Cases_annovar/heart_PTA_Cases.all_age.", condition_temp, "_", mutation_type, ".vcf"), sep = "\t") %>% mutate(V8 = sub(";.*", "", V8))
genomic_context_temp <- read.csv(paste0("data/heart_PTA_Cases_annovar/heart_PTA_Cases.all_age.", condition_temp, "_", mutation_type, ".csv"), header = TRUE) %>%
mutate(Cell_ID = heart_PTA_Cases_vcf_temp$V8) %>% mutate(Case_ID = str_extract(Cell_ID, "[^_]+")) %>%
mutate(Condition = condition_temp) %>% mutate(mut_type = mutation_type)
genomic_context_temp <- genomic_context_temp %>%
mutate(Cell_ID = ifelse(Cell_ID == "1864_M-E3-2n", "1864_E3", ifelse(Cell_ID == "4402_1_A1-2n", "4402_A1", ifelse(Cell_ID == "4402_1_A3-2n", "4402_A3",
ifelse(Cell_ID == "4638_1_A1-2n", "4638_A1", ifelse(Cell_ID == "4638_1_A4-2n", "4638_A4", ifelse(Cell_ID == "4638_1_B2-2n", "4638_B2",
ifelse(Cell_ID == "5657_M-D1-2n", "5657_D1", ifelse(Cell_ID == "5657_M-H1-2n", "5657_H1", ifelse(Cell_ID == "5828_CM_C2_2n", "5828_C2",
ifelse(Cell_ID == "5828_CM_G2_2n", "5828_G2", ifelse(Cell_ID == "5919_1_C4-2n", "5919_C4", ifelse(Cell_ID == "5919_1_D2-2n", "5919_D2",
ifelse(Cell_ID == "5919_1_E3-2n", "5919_E3", ifelse(Cell_ID == "5919_1_F6-2n", "5919_F6", ifelse(Cell_ID == "6032_1_A1-2n", "6032_A1",
ifelse(Cell_ID == "6032_M-C7-2n", "6032_C7", ifelse(Cell_ID == "6032_M-E7-2n", "6032_E7", ifelse(Cell_ID == "1673_CM_A2_2n", "1673_A2",
ifelse(Cell_ID == "1673_CM_A3_2n", "1673_A3", ifelse(Cell_ID == "1673_CM_D2_2n", "1673_D2", Cell_ID)))))))))))))))))))))
genomic_SCAN2_df_temp <- merge(genomic_context_temp, Hypoxia_PTA_Cases_metadata[c("Cell_ID", "Case_ID", "Condition", "age")]) |> base::`[`(selected_colnames) %>%
# filter(age >= 40 & age < 80) %>%
filter(Func.refGene %in% c("splicing", "exonic;splicing") | ExonicFunc.refGene %in% c("frameshift deletion", "frameshift insertion", "nonframeshift deletion", "nonsynonymous SNV", "stopgain"))
# filter(Func.refGene %in% c("intronic", "splicing", "exonic;splicing") |
#          ExonicFunc.refGene %in% c("frameshift deletion", "frameshift insertion", "nonframeshift deletion", "nonsynonymous SNV", "stopgain")) %>%
# filter(!grepl(";", Gene.refGene))
genomic_SCAN2_df <- rbind(genomic_SCAN2_df, genomic_SCAN2_df_temp)
}
}
# genomic_SCAN2_df <- genomic_SCAN2_df %>% filter(Gene.refGene %in% list_haha)
PTA_Cases_annovar_output <- write.table(genomic_SCAN2_df, paste0("data/MAFTools/PTA_Cases_annovar_output.txt"), sep = "\t", row.names = FALSE)
PTA_Cases_maf <- annovarToMaf(
annovar = paste0("data/MAFTools/PTA_Cases_annovar_output.txt"),
refBuild = "hg19",
# tsbCol = "Cell_ID",
tsbCol = "Case_ID",
table = "refGene",
MAFobj = T,
)
# Control_num <- 7
# IHD_num <- 15
# Control_num <- 3
# IHD_num <- 5
# Control_num <- 18
# IHD_num <- 15
Control_num <- 8
IHD_num <- 5
Control.maf <- subsetMaf(maf = PTA_Cases_maf, query = "Condition == 'Normal'", mafObj = TRUE)
Control.maf@summary$summary[3] <- Control_num
IHD.maf <- subsetMaf(maf = PTA_Cases_maf, query = "Condition == 'Disease'", mafObj = TRUE)
IHD.maf@summary$summary[3] <- IHD_num
my.color <- c("#FFDE17","#E21F26","#F57F20","#2179B4","#6B3F98","#009933","#66CBE4","#010101")
names(my.color) <- c("Missense_Mutation","Nonsense_Mutation","Splice_Site","Frame_Shift_Del","Frame_Shift_Ins","In_Frame_Del","In_Frame_Ins","Multi_Hit")
### select the gene list
hypoxia_gene_list <- read.csv("data/signet_sup/supplementary_table_5.csv", header = TRUE) %>%
pivot_longer(cols = everything(), names_to = "gene_set", values_to = "genes") %>% filter(!duplicated(genes))
hot_gene_list <- read.csv("data/MAFTools/hot_gene_list_heart_pta_02.csv", header = FALSE) %>% filter(!duplicated(V1))
all.genes <- names(sort(table(genomic_SCAN2_df$Gene.refGene), decreasing = TRUE))
top.genes <- names(sort(table(genomic_SCAN2_df$Gene.refGene), decreasing = TRUE))[1:200]
# list_haha <- intersect(genomic_SCAN2_df$Gene.refGene, a$V1)
# a<- as.data.frame(hot_gene_list)
# b <- as.data.frame(genomic_SCAN2_df$Gene.refGene)
# genomic_SCAN2_df[genomic_SCAN2_df$Gene.refGene == "LOC400684", ]
#
# list_haha_2 <- intersect(genomic_SCAN2_df$Gene.refGene, hypoxia_gene_list$genes)
list_haha_2 <- intersect(genomic_SCAN2_df$Gene.refGene, hot_gene_list)
genomic_SCAN2_df_haha <- genomic_SCAN2_df %>% filter(Gene.refGene %in% list_haha_2)
# sort(table(genomic_SCAN2_df_haha$Gene.refGene), decreasing = T)
selected_gene_list <- list_haha_2
pdf("results/local_test/MAFTools/PTA_Cases.MAFTools.summary.pdf", width = 8, height = 5)
plotmafSummary(maf = Control.maf, rmOutlier = TRUE, addStat = 'median', dashboard = TRUE, titvRaw = FALSE)
plotmafSummary(maf = IHD.maf, rmOutlier = TRUE, addStat = 'median', dashboard = TRUE, titvRaw = FALSE)
dev.off()
pdf("results/local_test/MAFTools/PTA_Cases.MAFTools.oncoplot.pdf", width = 10, height = 25)
oncoplot(maf = Control.maf, genes = selected_gene_list, keepGeneOrder = F, colors = my.color)
library(maftools)
library(psych)
library(ggplot2)
library(stringr)
library(dplyr)
library(tidyr)
setwd("/Users/zhemingan/Documents/BCH_research/Gene_Expression_Analysis")
##### read in metadata
Hypoxia_PTA_Cases_metadata <- readRDS("./data/SCAN2_df.rds") %>% as.data.frame() |>
base::`[`(c("cell_ID", "age", "gender", "Case_ID", "condition", "snv.burden", "snv.rate.per.gb")) %>%
rename_with(~ c("Cell_ID", "Condition"), .cols = c(1, 5))
Condition_list <- unique(Hypoxia_PTA_Cases_metadata$Condition)
selected_colnames <- c("Chr", "Start", "End", "Ref", "Alt", "Func.refGene", "Gene.refGene", "GeneDetail.refGene",
"ExonicFunc.refGene", "AAChange.refGene", "Cell_ID", "Case_ID", "Condition", "mut_type", "age")
genomic_SCAN2_df <- c()
for (condition_temp in Condition_list) {
for (mutation_type in c("ssnv", "sindel")) {
cat("Get genomic context for", condition_temp, mutation_type, "...\n")
heart_PTA_Cases_vcf_temp <- read.table(paste0("data/heart_PTA_Cases_annovar/heart_PTA_Cases.all_age.", condition_temp, "_", mutation_type, ".vcf"), sep = "\t") %>% mutate(V8 = sub(";.*", "", V8))
genomic_context_temp <- read.csv(paste0("data/heart_PTA_Cases_annovar/heart_PTA_Cases.all_age.", condition_temp, "_", mutation_type, ".csv"), header = TRUE) %>%
mutate(Cell_ID = heart_PTA_Cases_vcf_temp$V8) %>% mutate(Case_ID = str_extract(Cell_ID, "[^_]+")) %>%
mutate(Condition = condition_temp) %>% mutate(mut_type = mutation_type)
genomic_context_temp <- genomic_context_temp %>%
mutate(Cell_ID = ifelse(Cell_ID == "1864_M-E3-2n", "1864_E3", ifelse(Cell_ID == "4402_1_A1-2n", "4402_A1", ifelse(Cell_ID == "4402_1_A3-2n", "4402_A3",
ifelse(Cell_ID == "4638_1_A1-2n", "4638_A1", ifelse(Cell_ID == "4638_1_A4-2n", "4638_A4", ifelse(Cell_ID == "4638_1_B2-2n", "4638_B2",
ifelse(Cell_ID == "5657_M-D1-2n", "5657_D1", ifelse(Cell_ID == "5657_M-H1-2n", "5657_H1", ifelse(Cell_ID == "5828_CM_C2_2n", "5828_C2",
ifelse(Cell_ID == "5828_CM_G2_2n", "5828_G2", ifelse(Cell_ID == "5919_1_C4-2n", "5919_C4", ifelse(Cell_ID == "5919_1_D2-2n", "5919_D2",
ifelse(Cell_ID == "5919_1_E3-2n", "5919_E3", ifelse(Cell_ID == "5919_1_F6-2n", "5919_F6", ifelse(Cell_ID == "6032_1_A1-2n", "6032_A1",
ifelse(Cell_ID == "6032_M-C7-2n", "6032_C7", ifelse(Cell_ID == "6032_M-E7-2n", "6032_E7", ifelse(Cell_ID == "1673_CM_A2_2n", "1673_A2",
ifelse(Cell_ID == "1673_CM_A3_2n", "1673_A3", ifelse(Cell_ID == "1673_CM_D2_2n", "1673_D2", Cell_ID)))))))))))))))))))))
genomic_SCAN2_df_temp <- merge(genomic_context_temp, Hypoxia_PTA_Cases_metadata[c("Cell_ID", "Case_ID", "Condition", "age")]) |> base::`[`(selected_colnames) %>%
# filter(age >= 40 & age < 80) %>%
filter(Func.refGene %in% c("splicing", "exonic;splicing") | ExonicFunc.refGene %in% c("frameshift deletion", "frameshift insertion", "nonframeshift deletion", "nonsynonymous SNV", "stopgain"))
# filter(Func.refGene %in% c("intronic", "splicing", "exonic;splicing") |
#          ExonicFunc.refGene %in% c("frameshift deletion", "frameshift insertion", "nonframeshift deletion", "nonsynonymous SNV", "stopgain")) %>%
# filter(!grepl(";", Gene.refGene))
genomic_SCAN2_df <- rbind(genomic_SCAN2_df, genomic_SCAN2_df_temp)
}
}
# genomic_SCAN2_df <- genomic_SCAN2_df %>% filter(Gene.refGene %in% list_haha)
PTA_Cases_annovar_output <- write.table(genomic_SCAN2_df, paste0("data/MAFTools/PTA_Cases_annovar_output.txt"), sep = "\t", row.names = FALSE)
PTA_Cases_maf <- annovarToMaf(
annovar = paste0("data/MAFTools/PTA_Cases_annovar_output.txt"),
refBuild = "hg19",
# tsbCol = "Cell_ID",
tsbCol = "Case_ID",
table = "refGene",
MAFobj = T,
)
# Control_num <- 7
# IHD_num <- 15
# Control_num <- 3
# IHD_num <- 5
# Control_num <- 18
# IHD_num <- 15
Control_num <- 8
IHD_num <- 5
Control.maf <- subsetMaf(maf = PTA_Cases_maf, query = "Condition == 'Normal'", mafObj = TRUE)
Control.maf@summary$summary[3] <- Control_num
IHD.maf <- subsetMaf(maf = PTA_Cases_maf, query = "Condition == 'Disease'", mafObj = TRUE)
IHD.maf@summary$summary[3] <- IHD_num
my.color <- c("#FFDE17","#E21F26","#F57F20","#2179B4","#6B3F98","#009933","#66CBE4","#010101")
names(my.color) <- c("Missense_Mutation","Nonsense_Mutation","Splice_Site","Frame_Shift_Del","Frame_Shift_Ins","In_Frame_Del","In_Frame_Ins","Multi_Hit")
### select the gene list
hypoxia_gene_list <- read.csv("data/signet_sup/supplementary_table_5.csv", header = TRUE) %>%
pivot_longer(cols = everything(), names_to = "gene_set", values_to = "genes") %>% filter(!duplicated(genes))
hot_gene_list <- read.csv("data/MAFTools/hot_gene_list_heart_pta_02.csv", header = FALSE) %>% filter(!duplicated(V1))
all.genes <- names(sort(table(genomic_SCAN2_df$Gene.refGene), decreasing = TRUE))
top.genes <- names(sort(table(genomic_SCAN2_df$Gene.refGene), decreasing = TRUE))[1:200]
# list_haha <- intersect(genomic_SCAN2_df$Gene.refGene, a$V1)
# a<- as.data.frame(hot_gene_list)
# b <- as.data.frame(genomic_SCAN2_df$Gene.refGene)
# genomic_SCAN2_df[genomic_SCAN2_df$Gene.refGene == "LOC400684", ]
#
list_haha_2 <- intersect(genomic_SCAN2_df$Gene.refGene, hypoxia_gene_list$genes)
# list_haha_2 <- intersect(genomic_SCAN2_df$Gene.refGene, hot_gene_list)
genomic_SCAN2_df_haha <- genomic_SCAN2_df %>% filter(Gene.refGene %in% list_haha_2)
# sort(table(genomic_SCAN2_df_haha$Gene.refGene), decreasing = T)
selected_gene_list <- list_haha_2
pdf("results/local_test/MAFTools/PTA_Cases.MAFTools.summary.pdf", width = 8, height = 5)
plotmafSummary(maf = Control.maf, rmOutlier = TRUE, addStat = 'median', dashboard = TRUE, titvRaw = FALSE)
plotmafSummary(maf = IHD.maf, rmOutlier = TRUE, addStat = 'median', dashboard = TRUE, titvRaw = FALSE)
dev.off()
pdf("results/local_test/MAFTools/PTA_Cases.MAFTools.oncoplot.pdf", width = 10, height = 25)
oncoplot(maf = Control.maf, genes = selected_gene_list, keepGeneOrder = F, colors = my.color)
oncoplot(maf = IHD.maf, genes = selected_gene_list, keepGeneOrder = F, colors = my.color)
dev.off()
# pdf("results/local_test/MAFTools/PTA_Cases.MAFTools.oncoplot.topgenes.pdf", width = 10, height = 35)
# oncoplot(maf = Control.maf, genes = top.genes, keepGeneOrder = F, colors = my.color)
# oncoplot(maf = IHD.maf, genes = top.genes, keepGeneOrder = F, colors = my.color)
# dev.off()
# pdf("results/local_test/MAFTools/PTA_Cases.MAFTools.oncoplot.hypoxiagenes.pdf", width = 10, height = 25)
# oncoplot(maf = Control.maf, genes = hypoxia_gene_list$Elvidge, keepGeneOrder = TRUE, colors = my.color)
# oncoplot(maf = IHD.maf, genes = hypoxia_gene_list$Elvidge, keepGeneOrder = TRUE, colors = my.color)
# dev.off()
# pdf("results/local_test/MAFTools/PTA_Cases.MAFTools.oncoplot.hotgenes.pdf", width = 10, height = 25)
# oncoplot(maf = Control.maf, genes = list_haha_2, keepGeneOrder = TRUE, colors = my.color)
# oncoplot(maf = IHD.maf, genes = list_haha_2, keepGeneOrder = TRUE, colors = my.color)
# dev.off()
# pdf("AD_panel.both.loose.MAFTools.2.pdf",width=8,height=5)
# for(i in top.genes)
# {
#   print(lollipopPlot2(m1=AD.maf,m2=control.maf,gene=i,m1_name="AD",m2_name="Control",AACol1="AAChange.refGene",AACol2="AAChange.refGene",colors=my.color,showDomainLabel=F))
#   print(lollipopPlot2(m1=AD.maf,m2=chip.maf,gene=i,m1_name="AD",m2_name="CHIP",AACol1="AAChange.refGene",AACol2="AAChange.refGene",colors=my.color,showDomainLabel=F))
# }
# dev.off()
#
